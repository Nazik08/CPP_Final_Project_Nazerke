#include <iostream>
#include <conio.h>  // –î–ª—è _kbhit() –∏ _getch()
#include <windows.h> // –î–ª—è Sleep()

const int WIDTH = 50; // –®–∏—Ä–∏–Ω–∞ —ç–∫—Ä–∞–Ω–∞
const int HEIGHT = 10; // –í—ã—Å–æ—Ç–∞ —ç–∫—Ä–∞–Ω–∞
int dinoPos = HEIGHT - 2; // –ü–æ–∑–∏—Ü–∏—è –¥–∏–Ω–æ–∑–∞–≤—Ä–∞ –ø–æ –≤—ã—Å–æ—Ç–µ
int obstaclePos = WIDTH - 1; // –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è
bool isJumping = false; // –§–ª–∞–≥ –ø—Ä—ã–∂–∫–∞
int jumpHeight = 0; // –¢–µ–∫—É—â–∞—è –≤—ã—Å–æ—Ç–∞ –ø—Ä—ã–∂–∫–∞
bool isFalling = false; // –§–ª–∞–≥ –ø–∞–¥–µ–Ω–∏—è
int score = 0; // –°—á–µ—Ç—á–∏–∫ –æ—á–∫–æ–≤

// –û—á–∏—Å—Ç–∫–∞ —ç–∫—Ä–∞–Ω–∞ (Windows)
void ClearScreen() {
    system("cls");
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à–∏
bool IsKeyPressed() {
    return _kbhit();
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–∞ –Ω–∞–∂–∞—Ç–æ–π –∫–ª–∞–≤–∏—à–∏
char GetKeyPressed() {
    return _getch();
}

// –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è
void DrawGame() {
    ClearScreen();

    std::cout << "Score: " << score << "\n"; // –í—ã–≤–æ–¥–∏–º –æ—á–∫–∏

    for (int i = 0; i < HEIGHT; i++) {
        for (int j = 0; j < WIDTH; j++) {
            if (i == dinoPos && j == 1) {
                std::cout << "ü¶ñ"; // –î–∏–Ω–æ–∑–∞–≤—Ä (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ ü¶ñ)
            } else if (i == HEIGHT - 1 && j == obstaclePos) {
                std::cout << "üåµ"; // –ö–∞–∫—Ç—É—Å (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ üåµ)
            } else if (i == HEIGHT - 1) {
                std::cout << "_"; // –ó–µ–º–ª—è
            } else {
                std::cout << " ";
            }
        }
        std::cout << std::endl;
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –∏–≥—Ä—ã
void UpdateGame() {
    // –î–≤–∏–≥–∞–µ–º –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–µ
    obstaclePos--;
    if (obstaclePos < 0) {
        obstaclePos = WIDTH - 1; // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è
        score++; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç
    }

    // –õ–æ–≥–∏–∫–∞ –ø—Ä—ã–∂–∫–∞ –∏ –ø–∞–¥–µ–Ω–∏—è
    if (isJumping) {
        dinoPos--;
        jumpHeight++;
        if (jumpHeight > 3) { // –î–æ—Å—Ç–∏–≥ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –≤—ã—Å–æ—Ç—ã
            isJumping = false;
            isFalling = true;
        }
    } else if (isFalling) {
        dinoPos++;
        if (dinoPos >= HEIGHT - 2) {
            dinoPos = HEIGHT - 2;
            isFalling = false;
        }
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è
    if (dinoPos == HEIGHT - 2 && obstaclePos == 1) {
        ClearScreen();
        std::cout << "Game Over! Final Score: " << score << std::endl;
        exit(0);
    }
}

int main() {
    while (true) {
        DrawGame();
        UpdateGame();

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ (–ø—Ä–æ–±–µ–ª - –ø—Ä—ã–∂–æ–∫)
        if (IsKeyPressed()) {
            char key = GetKeyPressed();
            if (key == ' ' && !isJumping && !isFalling) {
                isJumping = true;
                jumpHeight = 0;
            }
        }

        Sleep(100); // –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ 100 –º—Å
    }

    return 0;
}
